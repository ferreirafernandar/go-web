# In this directory, run the following command to build this builder.
# $ gcloud builds submit . --config=cloudbuild.yaml
substitutions:
  _IMAGE_VERSION: 1.0.0
steps: 
  - id: "go_version"
    name: "gcr.io/cloud-builders/go"
    args: ["version"]
    env: ["GOPATH=."]
  - id: "go_test"
    name: "gcr.io/cloud-builders/go"
    args: ["test","./..."]
    env: ["GOPATH=."]

  - id: 'login docker hub'  
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker login --username=$$USERNAME --password=$$PASSWORD']
    secretEnv: ['docker-username', 'docker-password']
  - id: 'build image docker'  
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker build -t $$USERNAME/REPOSITORY:TAG .']
    secretEnv: ['docker-username']  
  - id: 'push imaga docker'   
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker push $$USERNAME/REPOSITORY:TAG']
    secretEnv: ['docker-username']
    availableSecrets:
    secretManager:
      - versionName: projects/PROJECT_ID/secrets/DOCKER_PASSWORD_SECRET_NAME/versions/DOCKER_PASSWORD_SECRET_VERSION
        env: 'docker-password'
      - versionName: projects/PROJECT_ID/secrets/DOCKER_USERNAME_SECRET_NAME/versions/DOCKER_USERNAME_SECRET_VERSION
        env: 'docker-username'
  - id: 'build'
    name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/go_web:latest'
      - '-t'
      - 'gcr.io/$PROJECT_ID/go_web:${_IMAGE_VERSION}'
      - '-f'
      - '.docker/go/Dockerfile'
      - '--target'
      - 'prod'
      - '.'

images:
  - 'gcr.io/$PROJECT_ID/go_web:latest'
  - 'gcr.io/$PROJECT_ID/go_web:${_IMAGE_VERSION}'